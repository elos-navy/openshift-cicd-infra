apiVersion: v1
kind: Template
labels:
  template: jenkins
metadata:
  annotations:
    description: CI/CD Jenkins component with pipeline for creating infra tools.
    iconClass: icon-jenkins
    tags: jenkins
  name: jenkins
objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
    name: ${NAME_PREFIX}-${PROJECT_NAME}
  spec: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows all pods in this namespace to pull images from
        this namespace.  It is auto-managed by a controller; remove subjects to disable.
    name: system:image-pullers
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:${NAME_PREFIX}-${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows builds in this namespace to push images to
        this namespace.  It is auto-managed by a controller; remove subjects to disable.
    name: system:image-builders
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-builder
  subjects:
  - kind: ServiceAccount
    name: builder
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows deploymentconfigs in this namespace to rollout
        pods in this namespace.  It is auto-managed by a controller; remove subjects
        to disable.
    name: system:deployers
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:deployer
  subjects:
  - kind: ServiceAccount
    name: deployer
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: admin
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: v1
  kind: ClusterRoleBinding
  metadata:
    name: jenkins-cluster-admin
  roleRef:
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${NAME_PREFIX}-jenkins
  userNames:
  - system:serviceaccount:${NAME_PREFIX}-jenkins:jenkins
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: jenkins-agent-appdev
    name: jenkins-agent-maven-35-centos7
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: docker.io/openshift/jenkins-agent-maven-35-centos7:v3.11
      generation: 2
      importPolicy: {}
      name: v3.11
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: jenkins-agent-appdev
    name: jenkins-agent-appdev
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: jenkins-agent-appdev
    name: jenkins-agent-appdev
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: jenkins-agent-appdev:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM docker.io/openshift/jenkins-agent-maven-35-centos7:v3.11
        USER root
        RUN yum -y install skopeo && yum clean all
        USER 1001
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins-agent-maven-35-centos7:v3.11
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: cMSazflaIcOBAR9YFj_7
      type: GitHub
    - generic:
        secret: kJiaoYAnS4m_25RhrQgW
      type: Generic
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: jenkins-ephemeral
    name: ${NAME_PREFIX}-jenkins
    namespace: ${NAME_PREFIX}-${PROJECT_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
    wildcardPolicy: None
parameters:
- name: NAME_PREFIX
  value: cicd
- name: APP_DOMAIN
  value: apps.oslab.elostech.cz
- name: PROJECT_NAME
  value: jenkins
- name: PROJECT_DISPLAYNAME
  value: CI/CD Jenkins
- name: PROJECT_DESCRIPTION
  value: CI/CD Jenkins
- name: PROJECT_ADMIN_USER
  value: admin
